{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/header/module.ts","webpack:///./src/app/services/auth/auth-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./routes/home-page/module\": [\n\t\t\"./src/app/routes/home-page/module.ts\",\n\t\t\"default~routes-home-page-module~routes-identity-validation-module~routes-reset-password-page-module\",\n\t\t\"common\",\n\t\t\"routes-home-page-module\"\n\t],\n\t\"./routes/identity-validation/module\": [\n\t\t\"./src/app/routes/identity-validation/module.ts\",\n\t\t\"default~routes-home-page-module~routes-identity-validation-module~routes-reset-password-page-module\",\n\t\t\"common\",\n\t\t\"routes-identity-validation-module\"\n\t],\n\t\"./routes/reset-password-page/module\": [\n\t\t\"./src/app/routes/reset-password-page/module.ts\",\n\t\t\"default~routes-home-page-module~routes-identity-validation-module~routes-reset-password-page-module\",\n\t\t\"common\",\n\t\t\"routes-reset-password-page-module\"\n\t],\n\t\"./routes/tap-page/module\": [\n\t\t\"./src/app/routes/tap-page/module.ts\",\n\t\t\"common\",\n\t\t\"routes-tap-page-module\"\n\t],\n\t\"./routes/user-page/module\": [\n\t\t\"./src/app/routes/user-page/module.ts\",\n\t\t\"common\",\n\t\t\"routes-user-page-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","/* \nImports \n*/\n  import { Component } from '@angular/core';\n//\n\n\n/* \nDefinition\n*/\n  @Component({\n    selector: 'app-root',\n    template: `\n      <header>\n        <app-header></app-header>\n      </header>\n      \n      <main class=\"maxWidth\">\n        <router-outlet></router-outlet>\n      </main>\n    `,\n  })\n//\n\n/* \nExport\n*/\n  export class AppComponent {\n    title = 'ANGclient';\n  }\n//","/*\nImports\n*/\n  // Angular\n  import { BrowserModule } from '@angular/platform-browser';\n  import { NgModule } from '@angular/core';\n  import { RouterModule } from '@angular/router';\n  import { HttpClientModule } from '@angular/common/http';\n  \n  // Inner components\n  import {  AuthService} from \"./services/auth/auth-service.service\";\n  import { AppComponent } from './app.component';\n  import { MainRouter } from './app.router';\n\n  // Inner modules\n  import { HeaderModule } from \"./components/header/module\";\n//\n\n\n/* \nDefinition\n*/\n  @NgModule({\n    declarations: [\n      AppComponent\n    ],\n    imports: [\n      BrowserModule,\n      RouterModule.forRoot( MainRouter, { onSameUrlNavigation: 'reload' } ),\n      HttpClientModule,\n      HeaderModule\n    ],\n    providers: [ AuthService ],\n    bootstrap: [ AppComponent ]\n  })\n//\n\n/* \nExport\n*/\n  export class AppModule { }\n//\n","/* \nImports\nhttps://gist.github.com/DWS-paris/886a33b6d5b0afecefc13595a807036d\n*/\n    // Angular\n    import { Routes } from '@angular/router';\n\n    // Import AuthGuuard to define route accessibility\n    import { AuthGuard } from \"./auth.guard\";\n//\n\n/* \nExport\n*/\n    export const MainRouter: Routes = [\n        {\n            path: '',\n            loadChildren: './routes/home-page/module#Module',\n            canActivate: [ AuthGuard ] // Accessible for connected user\n        },\n        {\n            path: 'identity-validation',\n            loadChildren: './routes/identity-validation/module#Module'\n        },\n        {\n            path: 'reset-password',\n            loadChildren: './routes/reset-password-page/module#Module',\n            canActivate: [ AuthGuard ] // Accessible for connected user\n        },\n        {\n            path: 'me',\n            loadChildren: './routes/user-page/module#Module',\n            canActivate: [ AuthGuard ] // Accessible for connected user\n        },\n        {\n            path: 'tap',\n            loadChildren: './routes/tap-page/module#Module',\n            canActivate: [ AuthGuard ] // Accessible for connected user\n        }\n    ];\n//","/* \nImports & definition \nhttps://gist.github.com/DWS-paris/65df1566222cd9819e3050e96af6f0c6\n*/\n  // Imports\n  import { Injectable } from '@angular/core';\n  import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n  // Inner\n  import { ApiResponseModel } from \"./models/api.reponse.model\";\n  import { AuthService } from \"./services/auth/auth-service.service\";\n\n  // Definition\n  @Injectable({\n    providedIn: 'root'\n  })\n//\n\n\n/* \nExport\n*/\n  export class AuthGuard implements CanActivate {\n    /* \n    Properties\n    */\n      constructor( \n        private AuthService: AuthService,\n        private Router: Router,\n      ){}\n    //\n\n\n    /**\n     * AuthGurad Strategy: thee canActivate is used in 'app.router'\n     * @param next : informations about the route component => https://bit.ly/2VT2Us1\n     * @param state : the state of the router => https://bit.ly/2Uo3zjO\n     */\n      canActivate( next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\n        return new Promise( (resolve, reject) => {\n          // Use Auth service to check user indentity from the servere\n          this.AuthService.getUserId() /* resolve(true) */\n          .then( (apiResponse: ApiResponseModel) => {\n            if (state.url == '/')\n            \tthis.Router.navigateByUrl('/me')\n            else\n            \tresolve(true) \n          })\n          .catch( (apiResponse: ApiResponseModel) => {\n\t\t\tif (state.url == '/')\n\t\t\t\tresolve(true)\n\t\t\telse\n\t\t\t\tthis.Router.navigateByUrl('/')\n          })\n        })\n      }\n    //\n  }\n//","module.exports = \"<section class=\\\"maxWidth\\\">\\n  <!-- Not Connected -->\\n  <div *ngIf=\\\"!isConnected\\\">\\n    <h1>Welcome on Tapboard</h1>\\n    <p>Login or register to start tapping</p>\\n  </div>\\n\\n  <!-- Connected -->\\n  <div *ngIf=\\\"isConnected\\\">\\n    <h1>Hello {{ first_name }}</h1>\\n    <nav>\\n      <ul>\\n        <li *ngIf=\\\"this.router.url === '/me'\\\"><a [routerLink]=\\\"'/tap'\\\">Scores</a></li>\\n        <li *ngIf=\\\"this.router.url === '/tap'\\\"><a [routerLink]=\\\"'/me'\\\">Play</a></li>\\n        <li><a (click)=\\\"logout()\\\">Logout</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n</section>\"","/* \nImports & definition \n*/\n  import { Component, OnInit } from '@angular/core';\n  import { Router } from \"@angular/router\";\n  import { resolve } from 'q';\n\n  // Inner\n  import { ApiResponseModel } from \"../../models/api.reponse.model\";\n  import { AuthService } from \"../../services/auth/auth-service.service\";\n\n\n  @Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    providers: [ AuthService ],\n    styles: []\n  })\n//\n\n\n/* \nExport\n*/\n  export class HeaderComponent implements OnInit {\n\n    public isConnected: Boolean = false; // If user is connected\n    public first_name: String = ''; // User's first name\n\n    constructor(\n      private AuthService: AuthService,\n      private router: Router\n    ) { }\n\n    // Check if user connected\n    public getIsConnected = () => {\n      this.AuthService.getUserId()\n        .then( (apiResponse: ApiResponseModel) => { \n          this.isConnected = true;\n          this.first_name = apiResponse.data.first_name\n        })\n        .catch( (apiResponse: ApiResponseModel) => { resolve(true) })\n    }\n\n    // Function Logout user\n    public logout = () => {\n      this.AuthService.logout()\n      .then( (apiResponse: ApiResponseModel) => { \n        // Go to page Home\n        this.router.navigate(['/'])\n      })\n      .catch( (apiResponse: ApiResponseModel) => { resolve(true) })\n    }\n\n    ngOnInit() {\n      this.getIsConnected()\n    }\n\n  }\n//\n","/* \nImports \n*/\n    // Angular\n    import { NgModule } from '@angular/core';\n    import { HttpClientModule } from '@angular/common/http';\n    import { CommonModule } from '@angular/common';\n    import { RouterModule } from \"@angular/router\";\n\n    // Inner\n    import { HeaderComponent } from \"./header.component\";\n// \n\n\n/* \nDefinition & export \n*/\n    @NgModule({\n        declarations: [ HeaderComponent ],\n        imports: [ \n            CommonModule, \n            RouterModule,\n            HttpClientModule\n        ],\n        exports: [ HeaderComponent ]\n    })\n\n    export class HeaderModule {};\n//","/* \nImports \n*/\n  import { Injectable } from '@angular/core';\n  import { HttpClient, HttpHeaders } from '@angular/common/http';\n  // import 'rxjs/add/operator/toPromise';\n  import { environment } from \"../../../environments/environment\";\n  import { IdentityModel } from '../../models/identity.model';\n//\n\n\n/* \nDefinition \n*/\n  @Injectable()\n  export class AuthService {\n\n    // Inject module(s) in the service\n    constructor( private HttpClient: HttpClient ){};\n    \n    // Function to register a user\n    public register(userData: IdentityModel): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // POST '/auth/register'\n      return this.HttpClient.post(`${environment.apiUrl}/auth/register`, userData, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    // Function to register a user\n    public identityValidation( _id: String, password: String ): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n      const userData = {\n        _id: _id,\n        password: password\n      }\n\n      // POST '/auth/register'\n      return this.HttpClient.post(`${environment.apiUrl}/auth/identity-validation`, userData, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    // Function to connect a user\n    public login(userData: IdentityModel): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // POST '/auth/login'\n      return this.HttpClient.post(`${environment.apiUrl}/auth/login`, userData, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    // Function to disconnect a user\n    public logout(): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // POST '/auth/logout'\n      return this.HttpClient.get(`${environment.apiUrl}/auth/logout`, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    // Function to reset password\n    public restPassword(password: String, newPassword: String): Promise<any>{\n      // Set header\n      let myHeader = new HttpHeaders();\n      myHeader.append('Content-Type', 'application/json');\n\n      // POST '/auth/login'\n      return this.HttpClient.post(`${environment.apiUrl}/auth/password`, { password, newPassword }, { headers: myHeader })\n      .toPromise().then(this.getData).catch(this.handleError);\n    };\n\n    // Function to get user identity from server\n    public getUserId(): Promise<any>{\n      // GET '/auth'\n      return this.HttpClient.get(`${environment.apiUrl}/auth`).toPromise()\n              .then(this.getData)\n              .catch(this.handleError);\n    };\n\n    // Get the API response\n    private getData(res: any){\n      return res || {};\n    };\n\n    // Get the API error\n    private handleError(err: any){\n      return Promise.reject(err.error);\n    };\n  };\n//","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: `http://localhost:7887/api`,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}